{"version":3,"sources":["components/AppNav/index.js","components/AppNav/AppNav.js","components/GitBrowser/UserSearch.js","components/Breadcrumbs/index.js","components/Breadcrumbs/BreadcrumbsBar.js","components/GitBrowser/GitUserRepos.js","components/GitBrowser/UserCard.js","components/GitBrowser/UserSearchResults.js","components/GitBrowser/GitBrowser.js","components/GitBrowser/index.js","components/App/index.js","index.js"],"names":["AppNav","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","this","props","title","Toggle","aria-controls","Component","GitUserForm","Form","onSubmit","onSubmitRepoSearch","InputGroup","className","controlId","FormControl","id","placeholder","aria-label","aria-describedby","onBlur","onChangeUserName","Append","Button","type","BreadcrumbsBar","user","userRepos","baseName","crumbs","url3","push","Breadcrumb","Item","key","url4","name","login","active","url","url2","createUserBreadcrumbs","userData","userRepoList","basename","GitUserRepos","output","listItems","map","app","i","Card","style","width","Body","Title","Text","description","Link","target","html_url","getRepoCard","display","gridTemplateColumns","gridGap","UserCard","Img","src","avatar_url","Footer","created_at","UserSearchResults","searchResults","Row","Col","sm","minWidth","marginBottom","borderBottom","padding","displayResults","GitBrowser","state","userNameSearch","usersData","e","userName","value","loadUser","preventDefault","getUserUrl","getUsersUrl","since","perPage","p","getUserReposUrl","userUrl","fetch","then","response","ok","json","Error","data","setState","loadUserRepoList","catch","error","console","log","dataUrl","view","Container","Breadcrumbs","UserSearch","DisplayUserHome","DisplayUserSearch","DisplayUserSearchResults","DisplayUsers","App","version","exact","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.92ba1b72.chunk.js","sourcesContent":["import AppNav from \"./AppNav\";\r\nexport default AppNav;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nclass AppNav extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">{this.props.title}</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nAppNav.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AppNav;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nclass GitUserForm extends Component {\r\n  render() {\r\n    // const { selectedPickup, selectedDropoff } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.props.onSubmitRepoSearch}>\r\n        <InputGroup className=\"mb-3\" controlId=\"searchText\">\r\n          <FormControl\r\n            id=\"searchText\"\r\n            placeholder=\"GIT username\"\r\n            aria-label=\"GIT username\"\r\n            aria-describedby=\"searchText\"\r\n            onBlur={this.props.onChangeUserName}\r\n          />\r\n          <InputGroup.Append controlId=\"searchButton\">\r\n            <Button variant=\"outline-secondary\" id=\"searchButton\" type=\"submit\">\r\n              <FaSearch /> Search\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nGitUserForm.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  onSubmitRepoSearch: PropTypes.func.isRequired,\r\n  onChangeUserName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GitUserForm;\r\n","import BreadcrumbsBar from \"./BreadcrumbsBar\";\r\nexport default BreadcrumbsBar;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\n\r\nexport default function BreadcrumbsBar(props) {\r\n  return createUserBreadcrumbs(\r\n    props.userData,\r\n    props.userRepoList,\r\n    props.basename\r\n  );\r\n}\r\n\r\nfunction createUserBreadcrumbs(user, userRepos, baseName) {\r\n  let crumbs = [];\r\n  if (user) {\r\n    let url3 = `${baseName}#userSearch`;\r\n    crumbs.push(\r\n      <Breadcrumb.Item key={\"search\"} href={url3}>\r\n        User Search\r\n      </Breadcrumb.Item>\r\n    );\r\n    if (userRepos) {\r\n      let url4 = `${baseName}#`;\r\n      crumbs.push(\r\n        <Breadcrumb.Item key={\"name\"} href={url4}>\r\n          {user.name ?? user.login}\r\n        </Breadcrumb.Item>\r\n      );\r\n      crumbs.push(\r\n        <Breadcrumb.Item key={\"repos\"} href=\"\" active=\"true\">\r\n          Repos\r\n        </Breadcrumb.Item>\r\n      );\r\n    } else {\r\n      let url = `${baseName}#`;\r\n      crumbs.push(\r\n        <Breadcrumb.Item href={url} key={\"name\"} active=\"true\">\r\n          {user.name}\r\n        </Breadcrumb.Item>\r\n      );\r\n      let url2 = `${baseName}#userRepos`;\r\n      crumbs.push(\r\n        <Breadcrumb.Item key={\"repos\"} href={url2}>\r\n          Repos\r\n        </Breadcrumb.Item>\r\n      );\r\n    }\r\n  } else {\r\n    crumbs.push(\r\n      <Breadcrumb.Item href=\"\" key={\"search\"} active=\"true\">\r\n        User Search\r\n      </Breadcrumb.Item>\r\n    );\r\n  }\r\n\r\n  return <Breadcrumb>{crumbs}</Breadcrumb>;\r\n}\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function GitUserRepos(props) {\r\n  var output;\r\n  if (props.userRepoList) {\r\n    const listItems = props.userRepoList.map((app, i) => getRepoCard(app, i));\r\n    output = (\r\n      <section\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(320px, 1fr))\",\r\n          gridGap: \"1rem\"\r\n        }}\r\n      >\r\n        {listItems}\r\n      </section>\r\n    );\r\n  } else {\r\n    output = <section />;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction getRepoCard(app, i) {\r\n  return (\r\n    <Card key={app.id} bg=\"light\" style={{ width: \"18rem\" }}>\r\n      <Card.Body>\r\n        <Card.Title>{app.name}</Card.Title>\r\n        <Card.Text>{app.description}</Card.Text>\r\n        <Card.Link target=\"_new\" href={app.html_url}>\r\n          {app.html_url}\r\n        </Card.Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function UserCard(props) {\r\n  return props.userData && getUserCard(props.userData);\r\n}\r\n\r\nfunction getUserCard(app) {\r\n  return (\r\n    <Card bg=\"light\" style={{ width: \"18rem\" }}>\r\n      <Card.Img variant=\"top\" src={app.avatar_url} />\r\n      <Card.Body>\r\n        <Card.Title>{app.name}</Card.Title>\r\n        <Card.Text>\r\n          <Card.Link target=\"_new\" href={app.html_url}>\r\n            {app.html_url}\r\n          </Card.Link>\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <small>{app.created_at}</small>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GitUserRepos from \"./GitUserRepos\";\r\nimport UserCard from \"./UserCard\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction displayResults(userData, userRepoList) {\r\n  const searchResults = (\r\n    <Row>\r\n      <Col sm={4} style={{ minWidth: \"300px\" }}>\r\n        <UserCard userData={userData} />\r\n      </Col>\r\n      <Col sm={8}>\r\n        <h4\r\n          style={{\r\n            marginBottom: \"40px\",\r\n            borderBottom: \"1px solid #e0e0e0\",\r\n            padding: \"10px\"\r\n          }}\r\n        >\r\n          {userRepoList && \"Repos\"}\r\n        </h4>\r\n        <GitUserRepos userRepoList={userRepoList} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  if (userData) {\r\n    return searchResults;\r\n  } else {\r\n    return <div style={{ padding: \"10px\" }} />;\r\n  }\r\n}\r\n\r\nexport default function UserSearchResults(props) {\r\n  return props.userData && displayResults(props.userData, props.userRepoList);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport UserSearch from \"./UserSearch\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport BreadcrumbsBar from \"../Breadcrumbs\";\r\nimport UserSearchResults from \"./UserSearchResults\";\r\n// import { FaUser, FaSearch, FaChevronRight, FaHome } from \"react-icons/fa\";\r\n\r\n// TODO: determine dynamically\r\nconst baseName = \"/gitUserSearch\";\r\n\r\nclass GitBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.view = this.props.view ?? \"home\";\r\n  }\r\n\r\n  state = {\r\n    userNameSearch: \"\",\r\n    userData: null,\r\n    usersData: null,\r\n    userRepoList: null // TODO: Likely not needed\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.loadReportData();\r\n    // this.getData();\r\n  }\r\n\r\n  onChangeUserName = e => {\r\n    let userName = e.target.value;\r\n    this.loadUser(userName);\r\n  };\r\n\r\n  onSubmitRepoSearch = e => {\r\n    e.preventDefault();\r\n    let userName = e.target.value;\r\n    this.loadUser(userName);\r\n  };\r\n\r\n  getUserUrl = user => {\r\n    const dataUrl = `https://api.github.com/users/${user}`;\r\n    return dataUrl;\r\n  };\r\n\r\n  getUsersUrl = (since, perPage) => {\r\n    // since=101&per_page=100\r\n    const s = since ?? 1;\r\n    const p = perPage ?? 1;\r\n    const dataUrl = `https://api.github.com/users?since=${s}&per_page=${p}`;\r\n    return dataUrl;\r\n  };\r\n\r\n  getUserReposUrl = userName => {\r\n    const dataUrl = `https://api.github.com/users/${userName}/repos`;\r\n    return dataUrl;\r\n  };\r\n\r\n  // https://api.github.com/users/krischilds\r\n\r\n  loadUser = userName => {\r\n    if (!userName) return;\r\n    const userUrl = this.getUserUrl(userName);\r\n    fetch(userUrl)\r\n      .then(response => {\r\n        if (response.ok) return response.json();\r\n        throw new Error(\"Request failed.\");\r\n      })\r\n      .then(data => {\r\n        this.setState({ userData: data, userNameSearch: userName });\r\n        this.loadUserRepoList(userName);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  loadUserRepoList = userName => {\r\n    if (!userName) return;\r\n    const dataUrl = this.getUserReposUrl(userName);\r\n    fetch(dataUrl)\r\n      .then(response => {\r\n        if (response.ok) return response.json();\r\n        throw new Error(\"Request failed.\");\r\n      })\r\n      .then(data => {\r\n        console.log(\"Load User Repo List\");\r\n        console.log(data);\r\n        this.setState({ userRepoList: data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    // description\r\n  };\r\n  // https://api.github.com/users?since=101&per_page=100\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BreadcrumbsBar\r\n          basename={baseName}\r\n          userData={this.state.userData}\r\n          userRepoList={this.state.userRepoList}\r\n        />\r\n        <UserSearch\r\n          onSubmitRepoSearch={this.onSubmitRepoSearch}\r\n          onChangeUserName={this.onChangeUserName}\r\n          userName={this.state.userNameSearch}\r\n        />\r\n        <UserSearchResults\r\n          userData={this.state.userData}\r\n          userRepoList={this.state.userRepoList}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GitBrowser;\r\n","import GitBrowser from \"./GitBrowser\";\r\nexport default GitBrowser;\r\n","import React from \"react\";\r\nimport AppNav from \"../AppNav\";\r\nimport GitBrowser from \"../GitBrowser\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Route, HashRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App(props) {\r\n  console.log(\"App version = \" + props.version);\r\n\r\n  const routing = (\r\n    <Router basename=\"/GitUserSearch\">\r\n      <div>\r\n        <Route exact path=\"/\" component={DisplayUserHome} />\r\n        <Route path=\"/userSearch\" component={DisplayUserSearch} />\r\n        <Route path=\"/userSearchResults\" component={DisplayUserSearchResults} />\r\n        <Route path=\"/users\" component={DisplayUsers} />\r\n      </div>\r\n    </Router>\r\n  );\r\n\r\n  return routing;\r\n}\r\n\r\nfunction DisplayUserHome() {\r\n  const version = \"1.0.0\";\r\n  return (\r\n    <>\r\n      <AppNav title=\"GIT Browser\" />\r\n      <GitBrowser />\r\n      <div>BUILD VERSION: {version}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DisplayUserSearch() {\r\n  return (\r\n    <>\r\n      <AppNav title=\"GIT User Search\" />\r\n      <GitBrowser />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DisplayUserSearchResults() {\r\n  return (\r\n    <>\r\n      <AppNav title=\"GIT User Search Results\" />\r\n      <GitBrowser />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DisplayUsers() {\r\n  return (\r\n    <>\r\n      <AppNav title=\"Display Users\" />\r\n      <GitBrowser />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App version=\"1.0.0\" />, rootElement);\r\n"],"sourceRoot":""}